Xdebug 2.1
==========

.. articleMetaData::
   :Where: London, UK
   :Date: 2010-06-29 15:17 Europe/London
   :Tags: blog, php, cms, xdebug, extensions

.. image:: /images/content/xdebug_logo.png
   :align: right

I've just released Xdebug_ 2.1. This new release contains all the bug fixes and
new features that have been developed over the past three years. It provides
full PHP 5.3 support, but it no longer supports PHP versions below 5.1.

A description of all the new features follows:

**Error Collection**

I've added xdebug_start_error_collection(),
xdebug_stop_error_collection() and xdebug_get_collected_errors(), which
allow you to collect all notices, warnings and error messages that Xdebug
generates from PHP's error_reporting functionality so that you can output them
at a later point in your script by hand.

**Header Setting Interception**

All functions that set HTTP headers such as with `header()`_ and
`setcookie()`_ are now intercepted by Xdebug. The intercepted headers
are stored internally in an array that can be retrieved by calling the
`xdebug_get_headers()`_ function. This is very useful in cases where you
need to test certain functionality that sets headers somewhere deep in
code. This function is also used in `eZ Components'`_ test suite to
test_ whether the correct HTTP headers are set in the MvcTools_
component.

**Variable Assignment Tracing**

The new setting `xdebug.collect_assignments`_ allows you to record changes to
variables in scripts to `trace files`_.  I've already written more about it in
`Variable tracing with Xdebug`_.

**"Scream" Support**

The scream_ PECL extension disables the ``@`` (shut-up) operator to actually
see all notices, warnings and errors that PHP generates. The scream
extension's functionality have been duplicated as Xdebug's `xdebug.scream`_
php.ini setting. Why disabling the @-operator is a good thing, I've
already outlined in `Five reasons why the shut-op operator (@) should be
avoided`_.

**Additions for Stack Traces**

All HTML containers generated by Xdebug (error messages, `xdebug_var_dump()`_
output) now contain a CSS class for easier styling.

The new setting `xdebug.file_link_format`_ allows you to turn any file/line
link in Xdebug's output to be decorated to a link with a specific format.  For
example you can set it to ``txmt://open/?file://%f&line=%l`` for opening files
directly in Textmate, or ``gvim://%f@%l`` with some shell script for gvim and
Firefox.


**Remote Debugging**

The new setting `xdebug.remote_connect_back`_, contributed by Lucas Nealan and
Brian Shire, allows Xdebug to try to make a debugging connection to the IP
address from which the browser request came from. This setting is an
additional solution for `debugging with multiple users`_.

The old ``gdb`` and ``php3`` remote debugging engines have been removed.


**Overloaded var_dump**

The newly introduced setting `xdebug.overload_var_dump` can be used to turn
off Xdebug's default behavior of overriding PHP's `var_dump()`_ function with
the `xdebug_var_dump()`_ function that uses pretty HTML for formatting a
variable structure. It does not stop `xdebug_var_dump()`_ from working
however.

**Donations**

You can probably imagine that writing and support Xdebug is a time-consuming
effort. It's a tool that saves a lot of work during developement of
applications, as well while debugging.  If you think Xdebug is valuable for
you, perhaps you would like to consider a donation_. All donations are greatly
appreciated and support future development and availablity of Xdebug.

If you want to sponsor a (new) feature in Xdebug, feel free to contact_ me as
well.

**Download and Support**

The new version of Xdebug can be downloaded through the download_ page. A list
with all changes can be found on the updates_ page. Support information can be
found on the support_ page, and issues and feature requests can be filed in the
`bug tracker`_. Before asking for support, please have a look at the FAQ_ first.

.. _download: http://xdebug.org/download.php
.. _updates: http://xdebug.org/updates.php#x_2_1_0
.. _support: http://xdebug.org/support.php
.. _`bug tracker`: http://bugs.xdebug.org
.. _FAQ: http://xdebug.org/docs/faq
.. _donation: http://xdebug.org/donate.php
.. _Xdebug: http://xdebug.org
.. _contact: mailto:derick@xdebug.org
.. _`xdebug_var_dump()`: http://xdebug.org/docs/all_functions#xdebug_var_dump
.. _`xdebug.file_link_format`: http://xdebug.org/docs/all_settings#file_link_format
.. _`xdebug.collect_assignments`: http://xdebug.org/docs/all_settings#collect_assignments
.. _`variable tracing with Xdebug`: http://derickrethans.nl/variable-tracing-with-xdebug.html
.. _`xdebug.remote_connect_back`: http://xdebug.org/docs/all_settings#remote_connect_back
.. _`debugging with multiple users`: http://derickrethans.nl/debugging-with-multiple-users.html
.. _`xdebug.overload_var_dump`: http://xdebug.org/docs/all_settings#overload_var_dump
.. _`var_dump()`: http://php.net/var_dump
.. _`xdebug.scream()`: http://xdebug.org/docs/all_settings#scream
.. _`xdebug_var_dump()`: http://xdebug.org/docs/all_functions#xdebug_var_dump
.. _`header()`: http://php.net/header
.. _`setcookie()`: http://php.net/setcookie
.. _`xdebug_get_headers()`: http://xdebug.org/docs/all_functions#xdebug_get_headers
.. _`eZ Components'`: http://ezcomponents.org
.. _test: http://svn.ez.no/svn/ezcomponents/trunk/MvcTools/tests/response_writers/http.php
.. _MvcTools: http://ezcomponents.org/s/MvcTools
.. _`trace files`: http://xdebug.org/docs/execution_trace
.. _`Variable tracing with Xdebug`: http://derickrethans.nl/variable-tracing-with-xdebug.html
.. _`Five reasons why the shut-op operator (@) should be avoided`: http://derickrethans.nl/five-reasons-why-the-shutop-operator-should-be-avoided.html
.. _scream: http://pecl.php.net/scream
.. _`issue tracker`: http://bugs.xdebug.org
.. _`Xdebug website`: http://xdebug.org/download.php
.. _`follow Xdebug on twitter`: http://twitter.com/xdebug
